stages:          # List of stages for jobs, and their order of execution
  - build
  - format
  - test
  - deploy

build-job:       # build frontend app here
  stage: build
  script:
    - echo "building app..."

backend-format:
  stage: format
  image: python:latest
  script:
    - python --version ; pip --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install ruff
    - ruff --fix
    - ruff format 

backend-unit-test:   
  stage: test    
  image: python:latest
  script:
    - python --version ; pip --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - cd bounty_hunter/
    - python manage.py test
    - cd ..

frontend-unit-test:   # put frontend tests here
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
      - echo "frontend tests"

backend-lint-test:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  image: python:latest
  script:
    - python --version ; pip --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install ruff
    - cd bounty_hunter/
    - ruff check
    - cd ..

frontend-lint-test:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  image: node:latest
  script:
    - npm init --yes
    - npm install 
    - npx eslint .
    - node_modules/.bin/eslint bounty-hunter-frontend/*.js
    - node_modules/.bin/eslint bounty-hunter-frontend/*/*.js
    - node_modules/.bin/eslint bounty-hunter-frontend/*/*/*.js

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
